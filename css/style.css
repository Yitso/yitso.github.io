*{margin:0;padding:0}body{background:#f7f7f7;font-family:"Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei","微软雅黑",Arial,sans-serif;font-size:14px}.alignleft{float:left}.alignright{float:right}#content{padding-top:30px;width:1200px;margin:0 auto}@media screen and (max-width:1260px){#content{width:100%}}#main-col{width:800px;margin-left:45px;float:left}@media screen and (max-width:1260px){#main-col{width:100%;margin-right:-300px}}@media screen and (max-width:900px){#main-col{margin-right:0;float:none}}#header{width:100%;background:#fff;height:60px}#header #fixed-header{position:fixed;width:100%;border-bottom:1px solid #dcdfe6;background:#fff;z-index:100}#header nav{max-width:1200px;height:60px;margin:0 auto}#header nav div{display:-webkit-box;display:-moz-box;display:-webkit-flex;display:-ms-flexbox;display:box;display:flex;display:-webkit-flex;-webkit-box-align:center;-moz-box-align:center;-o-box-align:center;-ms-flex-align:center;-webkit-align-items:center;align-items:center}#header a{text-decoration:none}#header h1{margin-left:15px;letter-spacing:1px;font-size:32px}#header h1 a{color:#409eff;text-decoration:none;font-weight:bold;display:block;font-family:monaco,menlo,consolas,courier new,monospace}#header h2{margin:0;font-weight:normal;font-size:16px;margin-top:10px}#header h2 a{color:#909399}#header ul{border-bottom:none}#header #main-nav{font-family:"lato",helvetica neue,helvetica,arial,sans-serif;line-height:2.5em}#header #main-nav ul{list-style:none}#header #main-nav ul li{float:left;margin-left:30px}article{-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04);box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04);background:#fff;width:800px}article .post-content{padding:20px 20px 15px 20px;margin-bottom:50px;position:relative}article .post-content .time{color:#909399;margin-top:8px;margin-bottom:-14.4px;margin-left:2px}@media screen and (max-width:600px){article .post-content{padding-left:20px}}article .gallery{overflow:hidden;position:relative}article .gallery:hover .control{opacity:1;-ms-filter:none;filter:none}article .gallery img{min-width:100%;max-width:100%;height:auto;position:absolute;top:0;left:0;opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0)}article .gallery .control{opacity:0;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";filter:alpha(opacity=0);-webkit-transition:0.3s;-moz-transition:0.3s;-o-transition:0.3s;-ms-transition:0.3s;transition:0.3s}article .gallery .prev,article .gallery .next{position:absolute;top:0;width:50%;height:100%;cursor:pointer}article .gallery .prev:before,article .gallery .next:before{position:absolute;font:24px/1 font-icon;text-align:center;width:24px;text-shadow:0 0 15px rgba(0,0,0,0.5);color:#fff;margin-top:-12px;top:50%}article .gallery .prev{left:0}article .gallery .prev:before{content:'\f053';left:10px}article .gallery .next{right:0}article .gallery .next:before{content:'\f054';right:10px}article header .title{font-size:24px;font-weight:bolder}article header .title a{color:#303133;text-decoration:none}article header .title a:hover{color:#409eff}article header .icon{width:icon-size;height:icon-size;margin-right:icon-gap;position:absolute;top:20px;left:20px;color:#409eff}@media screen and (max-width:600px){article header .icon{display:none}}article header .icon:before{position:absolute;font:32px font-icon;top:0;left:0;width:32px;text-align:center}article .entry{text-align:justify;line-height:1.6}article .entry p,article .entry blockquote,article .entry ul,article .entry ol,article .entry dl,article .entry table,article .entry iframe,article .entry h3,article .entry h4,article .entry h5,article .entry h6,article .entry .video-container{margin-top:15px}article .entry table{border-collapse:collapse;border-spacing:0;empty-cells:show;width:100%}article .entry table th{white-space:nowrap;color:#409eff;font-weight:600;background:#eee}article .entry table td,article .entry table th{border:1px solid #e2e4ea;padding:8px 16px;text-align:left}article .entry figure.highlight table{border:none;width:auto;border-collapse:separate}article .entry blockquote{border-top:1px solid #dcdfe6;border-bottom:1px solid #dcdfe6;font-style:italic;font-family:"georgia",serif;font-size:1.2em;padding:0 30px 15px;text-align:center}article .entry blockquote footer{border-top:none;font-size:.8em;line-height:1;margin:20px 0 0;padding-top:0}article .entry blockquote footer cite:before{content:'—';color:#ccc;padding:0 .5em}article .entry code,article .entry pre{font-family:monaco,menlo,consolas,courier new,monospace}article .entry a{color:#409eff;text-decoration:none}article .entry a:hover{color:#b3d8ff;text-decoration:underline}article .entry code{background:#eee;color:#666;padding:0 5px;margin:0 2px;font-size:.9em;border:1px solid #dcdfe6;border-radius:3px}article .entry pre{background:#eee;border:1px solid #dcdfe6;margin-top:15px;overflow:auto;padding:7px 15px;border-radius:2px}article .entry pre code{background:none;padding:0;margin:0;border:none;border-radius:0}article .entry ul,article .entry ol,article .entry dl{margin-left:20px}article .entry ul ul,article .entry ol ul,article .entry dl ul,article .entry ul ol,article .entry ol ol,article .entry dl ol,article .entry ul dl,article .entry ol dl,article .entry dl dl{margin-top:0}article .entry h1,article .entry h2,article .entry h3,article .entry h4,article .entry h5,article .entry h6{color:#303133;line-height:1.1em;margin:1.1em 0;font-weight:bolder}article .entry h1,article .entry h2{padding-bottom:10px;margin-top:20px}article .entry h4,article .entry h5,article .entry h6{font-weight:normal}article .entry h2{font-size:22px}article .entry h3{font-size:20px}article .entry h4{font-size:18px}article .entry h5{font-size:16px}article .entry h6{font-size:14px}article .entry p{color:#606266;line-height:1.6em;margin:1.6em 0}article .entry p img{display:-webkit-box;display:-moz-box;display:-webkit-flex;display:-ms-flexbox;display:box;display:flex;margin:0 auto;max-width:80%;max-height:500px}article .entry p .caption{display:block;text-align:center;margin-top:5px;color:#909399;position:relative;font-size:.9em;padding-left:25p}article .entry strong{color:#303133}article .entry img,article .entry video{max-width:100%;height:auto;border:none}article .entry iframe{border:none}article .entry .video-container{position:relative;padding-bottom:56.25%;padding-top:30px;height:0;overflow:hidden}article .entry .video-container iframe,article .entry .video-container object,article .entry .video-container embed{position:absolute;top:0;left:0;width:100%;height:100%;margin-top:0}article .entry .pullquote{float:right;border:none;padding:0;margin:1em 0 .5em 1.5em;text-align:left;width:45%;font-size:1.5em}#pagination a{display:block;padding:5px 10px;background:color-border;color:#909399;font-family:"lato",helvetica neue,helvetica,arial,sans-serif;text-shadow:0 0 1px #fff;margin-bottom:50px}#pagination a:hover{background:#409eff;color:#fff;text-decoration:none;text-shadow:none}#pagination .prev:before{content:'\f053';padding-right:10px;font-family:font-icon}#pagination .next:after{content:'\f054';padding-left:10px;font-family:font-icon}.archive-title{color:#909399;font-weight:normal;margin-bottom:30px;text-shadow:0 0 1px #fff}.archive-title:before{font-family:font-icon;content:'\f073';padding-right:15px}.archive-title.tag:before{content:'\f02b'}.archive-title.category:before{content:'\f07b'}.archive{margin-bottom:50px}.archive article{-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04);box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04)}.archive article .time{color:#909399}.archive article .post-content{margin-bottom:0}#sidebar{width:330px;line-height:1.8em}#sidebar #fixed-sidebar{position:fixed;width:330px}@media screen and (max-width:900px){#sidebar{float:none;width:100%}}#sidebar .widget{background:#fff;-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04);box-shadow:0 2px 4px rgba(0,0,0,0.12),0 0 6px rgba(0,0,0,0.04);margin-bottom:30px;word-wrap:break-word}#sidebar .widget .title{padding:15px 20px;font-size:1em;font-weight:normal}#sidebar .widget .entry{font-size:.9em;padding:15px 20px}#sidebar .widget ul,#sidebar .widget ol,#sidebar .widget dl{list-style:none}#sidebar .widget ul ul,#sidebar .widget ol ul,#sidebar .widget dl ul,#sidebar .widget ul ol,#sidebar .widget ol ol,#sidebar .widget dl ol,#sidebar .widget ul dl,#sidebar .widget ol dl,#sidebar .widget dl dl{list-style:disc;margin-left:20px}#sidebar .widget #person{width:100%}#sidebar .widget #person .person-wrap{margin:0 16.5px;padding:8px 0}#sidebar .widget #person .person-header i{color:#909399;padding-top:8px;font-size:16px}#sidebar .widget #person .el-divider{margin:8px 0}#sidebar .widget #person .person-box{display:-webkit-box;display:-moz-box;display:-webkit-flex;display:-ms-flexbox;display:box;display:flex;-webkit-box-align:center;-moz-box-align:center;-o-box-align:center;-ms-flex-align:center;-webkit-align-items:center;align-items:center}#sidebar .widget #person img{border-radius:50%;width:66px;margin-right:16.5px}#sidebar .widget #person .profile{height:66px}#sidebar .widget #person .profile .name{font-size:21.78px;margin-top:10.56px;color:#303133}#sidebar .widget #person .profile .profile-text{color:#909399}#sidebar .tag small{margin-left:15px}#sidebar .tag small:before{content:'('}#sidebar .tag small:after{content:')'}#sidebar .tagcloud .entry{padding-right:5px}#sidebar .tagcloud a{margin-right:10px;display:inline-block}#footer{text-align:center;color:#909399;margin-bottom:50px;font:.9em/1.6 "lato",helvetica neue,helvetica,arial,sans-serif;text-shadow:0 0 1px #fff}.entry .gist{background:#eee;border:1px solid color-border;margin-top:15px;padding:7px 15px;border-radius:2px;text-shadow:0 0 1px #fff;line-height:1.6;overflow:auto;color:#666}.entry .gist .gist-file{border:none;font-family:inherit;margin:0;font-size:.9em}.entry .gist .gist-file .gist-data{background:none;border-bottom:none}.entry .gist .gist-file .gist-data pre{padding:0 !important;font-family:monaco,menlo,consolas,courier new,monospace}.entry .gist .gist-file .gist-meta{background:none;color:#909399;margin-top:5px;padding:0;text-shadow:0 0 1px #fff;font-size:100%}.entry .gist .gist-file .gist-meta a{color:#409eff}.entry .gist .gist-file .gist-meta a:visited{color:#409eff}figure.highlight{background:#eee;border:1px solid color-border;margin-top:15px;padding:7px 15px;border-radius:2px;text-shadow:0 0 1px #fff;line-height:1.6;overflow:auto;position:relative;font-size:.9em}figure.highlight figcaption{color:#909399;margin-bottom:5px;text-shadow:0 0 1px #fff}figure.highlight figcaption a{position:absolute;right:15px}figure.highlight pre{border:none;padding:0;margin:0}figure.highlight table{margin-top:0;border-spacing:0}figure.highlight .gutter{color:#909399;padding:0;padding-right:15px;border:0;border-right:1px solid color-border;text-align:right}figure.highlight .code{padding-left:15px;border:0;border-left:1px solid #fff;color:#666}figure.highlight .line{height:20px}figure.highlight .line.marked{background:#d6d6d6}pre .comment,pre .template_comment,pre .diff .header,pre .doctype,pre .pi,pre .lisp .string,pre .javadoc{color:#93a1a1;font-style:italic}pre .keyword,pre .winutils,pre .method,pre .addition,pre .css .tag,pre .request,pre .status,pre .nginx .title{color:#859900}pre .number,pre .command,pre .string,pre .tag .value,pre .phpdoc,pre .tex .formula,pre .regexp,pre .hexcolor{color:#2aa198}pre .title,pre .localvars,pre .chunk,pre .decorator,pre .built_in,pre .identifier,pre .vhdl,pre .literal,pre .id{color:#268bd2}pre .attribute,pre .variable,pre .lisp .body,pre .smalltalk .number,pre .constant,pre .class .title,pre .parent,pre .haskell .type{color:#b58900}pre .preprocessor,pre .preprocessor .keyword,pre .shebang,pre .symbol,pre .symbol .string,pre .diff .change,pre .special,pre .attr_selector,pre .important,pre .subst,pre .cdata,pre .clojure .title{color:#cb4b16}pre .deletion{color:#dc322f}/*# sourceMappingURL=data:application/json;base64, */